import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import Layout from '@/components/layout/Layout';
import Image from 'next/image';
import Link from 'next/link';
import HeroCarousel from '@/components/HeroCarousel';
import { useRouter } from 'next/router';

const products = [
  {
    id: 6,
    title: '–ö–∏–ª–æ–≤–æ–ª—å—Ç–º–µ—Ç—Ä –ö–í–ú',
    description: '–¶–∏—Ñ—Ä–æ–≤–æ–π –∫–∏–ª–æ–≤–æ–ª—å—Ç–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –≤ —ç–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –≤ –≤—ã—Å–æ–∫–æ–≤–æ–ª—å—Ç–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö.',
    image: '/images/products/–ö–ò–õ–û–í–û–õ–¨–¢–ú–ï–¢–† –ö–í–ú.jpg',
    category: '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã'
  },
  {
    id: 4,
    title: '–ò–ö–ê–°-10',
    description: '–ü—Ä–µ—Ü–∏–∑–∏–æ–Ω–Ω—ã–π –æ–º–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –º–∞–ª—ã—Ö —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–π. –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–Ω—ã—Ö —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–π –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤—ã—Å–æ–∫–æ–≤–æ–ª—å—Ç–Ω—ã—Ö –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π.',
    image: '/images/products/ikas (1).jpg',
    category: '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã'
  },
  {
    id: 5,
    title: '–ê–í–≠–ú-9',
    description: '–¶–∏—Ñ—Ä–æ–≤–æ–π –º–µ–≥–∞–æ–º–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –û—Å–Ω–∞—â–µ–Ω —Ñ—É–Ω–∫—Ü–∏–µ–π –∏–∑–º–µ—Ä–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∞–±—Å–æ—Ä–±—Ü–∏–∏.',
    image: '/images/products/avem-9 (1).jpg',
    category: '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã'
  },
];

const features = [
  {
    icon: 'üî¨',
    title: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
    description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏'
  },
  {
    icon: 'üè≠',
    title: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ',
    description: '–ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Ç –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'
  },
  {
    icon: 'üìä',
    title: '–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
    description: '–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ì–û–°–¢ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏'
  },
  {
    icon: 'üõ°Ô∏è',
    title: '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
    description: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–µ–º —Ä–µ—à–µ–Ω–∏—è —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π'
  }
];

const solutions = [
  {
    title: '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
    description: '–®–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –ø—Ä–∏–±–æ—Ä–æ–≤ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤',
    image: '/images/products/avem-4 (1).png',
    link: '/products?category=measuring',
    categoryId: 'measuring'
  },
  {
    title: '–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–µ–Ω–¥—ã',
    description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
    image: '/images/products/–ª–∏–≤—Å.jpg',
    link: '/products?category=testing',
    categoryId: 'testing'
  },
  {
    title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π',
    description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å—Ç–µ–Ω–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π (–ö–°–ü–ê–î)',
    image: '/images/products/kspad (1).jpg',
    link: '/products?category=testing&subcategory=diagnostic',
    categoryId: 'testing'
  },
  {
    title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–æ–≤',
    description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–æ–≤',
    image: '/images/products/–ö–°–ü–≠–ú1000jpg.jpg',
    link: '/products?category=testing&subcategory=transformer-testing',
    categoryId: 'testing'
  },
  {
    title: '–ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
    description: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π',
    image: '/images/products/unm-1750 (1).jpg',
    link: '/products?category=load-devices',
    categoryId: 'load-devices'
  },
  {
    title: '–°–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏',
    image: '/images/products/sum-1 (1).jpg',
    link: '/products?category=automation',
    categoryId: 'automation'
  }
];

export default function Home() {
  const router = useRouter();
  const [scale, setScale] = useState(1);

  useEffect(() => {
    const handleResize = () => {
      const currentScale = window.innerWidth / document.documentElement.clientWidth;
      setScale(currentScale);
    };

    window.addEventListener('resize', handleResize);
    handleResize(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ

    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  const handleCardClick = (e: React.MouseEvent, link: string) => {
    e.preventDefault();
    if (e.ctrlKey || e.metaKey) {
      // –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç Ctrl –∏–ª–∏ Cmd, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
      window.open(link, '_blank');
      return;
    }
    router.push(link).then(() => {
      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  };

  return (
    <Layout>
      {/* Hero Section */}
      <section className="relative h-[100vh] md:h-[60vh] md:min-h-[500px] flex items-center">
        <div className="absolute inset-0 z-0">
          <HeroCarousel />
        </div>

        <div className="container mx-auto px-2 sm:px-4 z-10">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="max-w-3xl text-white"
          >
            <h1 className="text-2xl xs:text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold mb-3 sm:mb-4 md:mb-6">
              –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏
            </h1>
            <p className="text-base xs:text-lg sm:text-xl text-gray-200 mb-4 sm:mb-6 md:mb-8">
              –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∞–≥—Ä–µ–≥–∞—Ç–æ–≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            </p>
            <div className="flex flex-col xs:flex-row gap-3 sm:gap-4">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="btn-primary text-sm xs:text-base w-full xs:w-auto px-4 py-2 sm:px-6 sm:py-3"
                onClick={(e) => handleCardClick(e, '/products')}
              >
                <Link href="/products" onClick={(e) => e.preventDefault()}>–ù–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—è</Link>
              </motion.button>
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="btn-secondary bg-white/10 backdrop-blur-sm text-white border-white/20 hover:bg-white/20 text-sm xs:text-base w-full xs:w-auto px-4 py-2 sm:px-6 sm:py-3"
                onClick={(e) => handleCardClick(e, '/contacts')}
              >
                <Link href="/contacts" onClick={(e) => e.preventDefault()}>–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</Link>
              </motion.button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Solutions Section */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-12"
          >
            <h2 className="text-3xl font-bold mb-4">–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª–µ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
            {solutions.map((solution, index) => (
              <Link 
                key={index}
                href={solution.link}
                onClick={(e) => handleCardClick(e, solution.link)}
                className="block group"
              >
                <motion.div
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-all cursor-pointer"
                  whileHover={{ y: -5 }}
                >
                  <div className="relative h-64">
                    <Image
                      src={solution.image}
                      alt={solution.title}
                      fill
                      className="object-cover transition-transform duration-300 group-hover:scale-105"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/70 to-black/0" />
                  </div>
                  <div className="absolute bottom-0 left-0 right-0 p-6 text-white">
                    <h3 className="text-xl font-semibold mb-2">{solution.title}</h3>
                    <p className="text-gray-200 mb-4">{solution.description}</p>
                    <span className="inline-flex items-center text-primary-300 group-hover:text-primary-200">
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                      <svg
                        className="w-5 h-5 ml-2 transition-transform group-hover:translate-x-1"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M17 8l4 4m0 0l-4 4m4-4H3"
                        />
                      </svg>
                    </span>
                  </div>
                </motion.div>
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* Products Preview Section */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-12"
          >
            <h2 className="text-3xl font-bold mb-4">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {products.map((product, index) => (
              <Link 
                key={product.id}
                href="/products"
                onClick={(e) => handleCardClick(e, '/products')}
                className="block"
              >
                <motion.div
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="bg-white rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all cursor-pointer h-full"
                  whileHover={{ y: -5 }}
                >
                  <div className="relative h-48 bg-gray-100">
                    <Image
                      src={product.image}
                      alt={product.title}
                      fill
                      className="object-contain p-4"
                    />
                    <div className="absolute top-4 right-4 bg-primary-500 text-white px-3 py-1 rounded-full text-sm">
                      {product.category}
                    </div>
                  </div>
                  <div className="p-6">
                    <h3 className="text-xl font-semibold mb-2">{product.title}</h3>
                    <p className="text-gray-600 mb-4 line-clamp-2">{product.description}</p>
                  </div>
                </motion.div>
              </Link>
            ))}
          </div>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mt-12"
          >
            <Link 
              href="/products"
              onClick={(e) => handleCardClick(e, '/products')}
              className="btn-secondary inline-flex items-center"
            >
              –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
              <svg
                className="w-5 h-5 ml-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M17 8l4 4m0 0l-4 4m4-4H3"
                />
              </svg>
            </Link>
          </motion.div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-12 sm:py-16 md:py-20 bg-gradient-to-b from-gray-50 to-white">
        <div className="container mx-auto px-2 sm:px-4">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-2xl sm:text-3xl font-bold text-center mb-8 sm:mb-12"
          >
            –ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
          </motion.h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {features.map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow"
              >
                <div className="text-4xl mb-4">{feature.icon}</div>
                <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
                <p className="text-gray-600">{feature.description}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </Layout>
  );
} 